#!/usr/bin/env zsh

verbose=false

while getopts ':v' flag; do
  case "${flag}" in
    v) verbose='true' ;;
    *) echo "Usage: install-dotfiles [-v]"
       exit 1 ;;
  esac
done

cd "$(dirname $(realpath $0))/.."

xdg_cfgs=(nvim nom mpv bashmount sway swaylock waybar mako alacritty zathura btop fuzzel starship.toml)
home_cfgs=(.zshrc .gitconfig .tmux.conf scripts)
desktop_cfgs=($(ls desktop/*.desktop))

for cfg in $xdg_cfgs
do
	if [ -L ~/.config/$cfg ]; then
		$verbose && echo Already linked: ~/.config/$cfg
	elif [ -e ~/.config/$cfg ]; then
		echo Error (already exists): ~/.config/$cfg
	else
		echo Linking: ~/.config/$cfg
		[ -d $cfg ] && ln -st ~/.config "$(realpath $cfg)"
		[ -f $cfg ] && ln -s "$(realpath $cfg)" ~/.config
	fi
done

for cfg in $home_cfgs
do
	if [ -L ~/$cfg ]; then
		$verbose && echo Already linked: ~/$cfg
	elif [ -e ~/$cfg ]; then
		echo Error (already exists): ~/$cfg
	else
		echo Linking: ~/$cfg
		[ -d $cfg ] && ln -st ~ "$(realpath $cfg)"
		[ -f $cfg ] && ln -s "$(realpath $cfg)" ~/$cfg
	fi
done

mkdir -p ~/.local/share/applications
for cfg in $desktop_cfgs
do
	loc=~/.local/share/applications/$(basename $cfg)
	if [ -L $loc ]; then
		$verbose && echo Already linked: $loc
	elif [ -e $loc ]; then
		echo Error (already exists): $loc
	else
		echo Linking: $loc
		[ -d $cfg ] && ln -st ~/.local/share/applications "$(realpath $cfg)"
		[ -f $cfg ] && ln -s "$(realpath $cfg)" ~/.local/share/applications
	fi
done
